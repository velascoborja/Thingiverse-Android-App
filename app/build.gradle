plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

//Generate versionCode based on total commit count
static def generateVersionCode() {
    def gitCommand = "git rev-list --all --count"
    def result = gitCommand.execute().text.trim() //unix
    if (result.empty) result = "PowerShell -Command $gitCommand".execute().text.trim() //windows
    if (result.empty) throw new RuntimeException("Could not generate versioncode on this platform? Cmd output: ${result.text}")
    return result.toInteger()
}

android {
    compileSdk androidCompileSdkVersion

    defaultConfig {
        applicationId "es.borjavg.thingiverse"
        minSdk androidMinSdkVersion
        targetSdk androidTargetSdkVersion
        versionCode generateVersionCode()
        versionName "1.0"

        testInstrumentationRunner "es.borjavg.thingiverse.util.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    flavorDimensions "enviroment"

    productFlavors {
        pre {
            dimension "enviroment"
            applicationId "es.borjavg.thingiverse"
            versionNameSuffix "-pre"
        }
        dev {
            dimension "enviroment"
            applicationId "es.borjavg.thingiverse"
            versionNameSuffix "-dev"
        }
    }
}

dependencies {

    implementation project(':core:domain')
    implementation project(':core:data')
    implementation project(':core:presentation')

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'

    testImplementation 'junit:junit:4.+'
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutinesCoreVersion"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$mockitoKotlinVersion"
    testImplementation "androidx.arch.core:core-testing:$archTestingVersion"

    debugImplementation "androidx.fragment:fragment-testing:1.4.0"
    androidTestImplementation "com.squareup.okhttp3:mockwebserver:$okHttpVersion"
    androidTestImplementation  "com.google.dagger:hilt-android-testing:$hiltVersion"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"

    implementation "androidx.fragment:fragment-ktx:$fragmentKtxVersion"

    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$okHttpVersion"

    implementation "com.github.bumptech.glide:glide:$glideVersion"
    annotationProcessor "com.github.bumptech.glide:compiler:$glideVersion"

    implementation "com.airbnb.android:lottie:$lottieVersion"

    /* Test dependencies */
    debugImplementation "androidx.fragment:fragment-testing:1.4.0"
    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-contrib:3.0.2'
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hiltVersion"

}